{"ast":null,"code":"var _jsxFileName = \"/Users/samoylowgennadiy/Desktop/GitHub/todolist/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport './App.css';\nimport CreateModal from './components/modals/CreateModal';\nimport TasksList from './components/TasksList';\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    time: \"20:00\",\n    title: \"Lick slicker finger\"\n  }, {\n    time: \"10:00\",\n    title: \"Start watch film\"\n  }, {\n    time: \"18:30\",\n    title: \"Disturp USSR\"\n  }]);\n  const [task, setTask] = useState({\n    time: '00:00',\n    title: ''\n  });\n  const [modalActive, setModalActive] = useState(false);\n  const addNewTask = e => {\n    e.preventDefault();\n    setTasks([...tasks, {\n      ...task,\n      id: task.title\n    }]);\n    setModalActive(false);\n    setTask({\n      time: '00:00',\n      title: ''\n    });\n  };\n  const sortedTasks = useMemo(() => {\n    return [...tasks].sort((a, b) => a[\"time\"].localeCompare(b[\"time\"]));\n  }, [tasks]);\n  const completePost = task => {\n    setTasks(tasks.filter(t => {\n      if (t.title !== task.title) {\n        console.log(t.title);\n        console.log(task.title);\n      }\n      return t.title !== task.title;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WrapperContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Bottoms\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Bottoms__time\",\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"YYYY-MM-DD HH:mm\",\n              interval: 1000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Bottoms__create\",\n            onClick: () => setModalActive(true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n          tasksList: sortedTasks,\n          complete: completePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"MainLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ModalBody\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ModalBody__inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: task.time,\n              placeholder: \"Time\",\n              className: \"ModalBody__time\",\n              onChange: e => setTask({\n                ...task,\n                time: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: task.title,\n              placeholder: \"Task\",\n              className: \"ModalBody__title\",\n              onChange: e => setTask({\n                ...task,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ModalBody__button\",\n            onClick: addNewTask,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+mSLxQmvoXtZ5BTNFo90rKp1iFg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","CreateModal","TasksList","Moment","App","tasks","setTasks","time","title","task","setTask","modalActive","setModalActive","addNewTask","e","preventDefault","id","sortedTasks","sort","a","b","localeCompare","completePost","filter","t","console","log","target","value"],"sources":["/Users/samoylowgennadiy/Desktop/GitHub/todolist/src/App.js"],"sourcesContent":["import React, {useState, useMemo} from 'react';\nimport './App.css';\nimport CreateModal from './components/modals/CreateModal';\nimport TasksList from './components/TasksList';\nimport Moment from \"react-moment\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {time: \"20:00\", title: \"Lick slicker finger\"},\n    {time: \"10:00\", title: \"Start watch film\"},\n    {time: \"18:30\", title: \"Disturp USSR\"}\n  ]);\n  const [task, setTask] = useState({time: '00:00', title: ''})\n  const [modalActive, setModalActive] = useState(false)\n\n  const addNewTask = (e) => {\n    e.preventDefault()\n    setTasks([...tasks, {...task, id: task.title}])\n    setModalActive(false)\n    setTask({time: '00:00', title: ''})\n  }\n\n    const sortedTasks = useMemo(() => {\n      \n      return [...tasks].sort((a,b) => a[\"time\"].localeCompare(b[\"time\"]))\n    },[tasks])\n\n    const completePost = task => {\n\t\tsetTasks(tasks.filter(t => {\n      if(t.title !== task.title) {\n        console.log(t.title)\n        console.log(task.title)\n      }\n      return t.title !== task.title}));\n\t};\n\n  return (\n    <div className=\"App\">\n      <div className=\"Body\">\n        <div className=\"WrapperContent\">\n          <h1>TODO</h1>\n\n          <div className=\"Bottoms\">\n            <div className=\"Bottoms__time\">\n              <Moment format=\"YYYY-MM-DD HH:mm\" interval={1000} />\n            </div>\n            <button className=\"Bottoms__create\" onClick={() => setModalActive(true)}>+</button>\n          </div>\n\n          <TasksList \n              tasksList={sortedTasks} \n              complete={completePost}\n          /> \n\n          <hr className=\"MainLine\"/>\n          \n        </div>\n      </div>\n\n      <CreateModal active={modalActive} setActive={setModalActive}>\n        <div className=\"ModalBody\">\n          <form>\n            <div className=\"ModalBody__inputs\">\n              <input \n                type=\"time\" \n                value={task.time}\n                placeholder=\"Time\" \n                className=\"ModalBody__time\" \n                onChange={e => setTask({...task, time: e.target.value})}/>\n              <input \n                type=\"text\" \n                value={task.title}\n                placeholder=\"Task\" \n                className=\"ModalBody__title\" \n                onChange={e => setTask({...task, title: e.target.value})}/>\n            </div>\n            <button className=\"ModalBody__button\" onClick={addNewTask}>Create</button>\n          </form>\n        </div>\n      </CreateModal>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,OAAO,QAAO,OAAO;AAC9C,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,cAAc;AAAC;AAElC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IAACQ,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAqB,CAAC,EAC7C;IAACD,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAkB,CAAC,EAC1C;IAACD,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAc,CAAC,CACvC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAACQ,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAC5D,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAC,GAAGI,IAAI;MAAEO,EAAE,EAAEP,IAAI,CAACD;IAAK,CAAC,CAAC,CAAC;IAC/CI,cAAc,CAAC,KAAK,CAAC;IACrBF,OAAO,CAAC;MAACH,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAE,CAAC,CAAC;EACrC,CAAC;EAEC,MAAMS,WAAW,GAAGjB,OAAO,CAAC,MAAM;IAEhC,OAAO,CAAC,GAAGK,KAAK,CAAC,CAACa,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAAC,MAAM,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;EACrE,CAAC,EAAC,CAACf,KAAK,CAAC,CAAC;EAEV,MAAMiB,YAAY,GAAGb,IAAI,IAAI;IAC/BH,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAACC,CAAC,IAAI;MACvB,IAAGA,CAAC,CAAChB,KAAK,KAAKC,IAAI,CAACD,KAAK,EAAE;QACzBiB,OAAO,CAACC,GAAG,CAACF,CAAC,CAAChB,KAAK,CAAC;QACpBiB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAACD,KAAK,CAAC;MACzB;MACA,OAAOgB,CAAC,CAAChB,KAAK,KAAKC,IAAI,CAACD,KAAK;IAAA,CAAC,CAAC,CAAC;EACrC,CAAC;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,MAAM;MAAA,uBACnB;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC7B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAEb;UAAK,SAAS,EAAC,SAAS;UAAA,wBACtB;YAAK,SAAS,EAAC,eAAe;YAAA,uBAC5B,QAAC,MAAM;cAAC,MAAM,EAAC,kBAAkB;cAAC,QAAQ,EAAE;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAChD,eACN;YAAQ,SAAS,EAAC,iBAAiB;YAAC,OAAO,EAAE,MAAMI,cAAc,CAAC,IAAI,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/E,eAEN,QAAC,SAAS;UACN,SAAS,EAAEK,WAAY;UACvB,QAAQ,EAAEK;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB,eAEF;UAAI,SAAS,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IAEtB;MAAA;MAAA;MAAA;IAAA,QACF,eAEN,QAAC,WAAW;MAAC,MAAM,EAAEX,WAAY;MAAC,SAAS,EAAEC,cAAe;MAAA,uBAC1D;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB;UAAA,wBACE;YAAK,SAAS,EAAC,mBAAmB;YAAA,wBAChC;cACE,IAAI,EAAC,MAAM;cACX,KAAK,EAAEH,IAAI,CAACF,IAAK;cACjB,WAAW,EAAC,MAAM;cAClB,SAAS,EAAC,iBAAiB;cAC3B,QAAQ,EAAEO,CAAC,IAAIJ,OAAO,CAAC;gBAAC,GAAGD,IAAI;gBAAEF,IAAI,EAAEO,CAAC,CAACa,MAAM,CAACC;cAAK,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE,eAC5D;cACE,IAAI,EAAC,MAAM;cACX,KAAK,EAAEnB,IAAI,CAACD,KAAM;cAClB,WAAW,EAAC,MAAM;cAClB,SAAS,EAAC,kBAAkB;cAC5B,QAAQ,EAAEM,CAAC,IAAIJ,OAAO,CAAC;gBAAC,GAAGD,IAAI;gBAAED,KAAK,EAAEM,CAAC,CAACa,MAAM,CAACC;cAAK,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACzD,eACN;YAAQ,SAAS,EAAC,mBAAmB;YAAC,OAAO,EAAEf,UAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAA;UAAA;UAAA;UAAA;QAAA;MACrE;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QAEV;AAEV;AAAC,GA7EQT,GAAG;AAAA,KAAHA,GAAG;AA+EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}